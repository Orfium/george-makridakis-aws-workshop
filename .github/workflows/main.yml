name: aws-workshop-george-makridakis

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - "*"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

permissions:
  id-token: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install requirements
        run: |
          pip install cfn-lint
      - name: Run cfn-lint
        run: |
          shopt -s globstar
          cfn-lint ./infra/**/*.yml
  build:
    name: Build and push image
    needs:
      - lint
    runs-on: ubuntu-latest
    outputs:
      ecr-image: ${{ steps.ecr-image-out.outputs.ECR_IMAGE }}
      env-id: ${{ steps.set-environment.outputs.ENVIRONMENT_ID }}
      env-suffix: ${{ steps.set-environment.outputs.ENVIRONMENT_SUFFIX }}
      init-deployment: ${{ steps.check-init-deploy.outputs.INITIAL_DEPLOYMENT }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set deployment env
        id: set-environment
        run: |
          if [ ${{ github.event_name }} == 'pull_request' ]; then
            echo "This is a review environment"
            cat infra/environments/review.env >> $GITHUB_ENV
            echo "ENVIRONMENT_ID=review" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT_SUFFIX=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            echo "This is a production environment"
            cat infra/environments/example.env >> $GITHUB_ENV
            echo "ENVIRONMENT_ID=example" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT_SUFFIX=" >> $GITHUB_OUTPUT
          fi
      - name: Configure AWS Credentials
        id: configure-aws-creds
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ env.AWS_CD_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: false

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: "${{ env.ECR_REGISTRY }}"

      - name: Build And Push Docker Image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.ECR_REGISTRY }}:${{ github.sha }}
          cache-to: "type=inline"

      - name: Output ECR image
        id: ecr-image-out
        shell: bash
        run: |
          ECR_IMAGE=${{ env.ECR_REGISTRY }}:${{ github.sha }}
          echo "ECR_IMAGE=$ECR_IMAGE" >> $GITHUB_OUTPUT
          echo "The ECR image arn is $ECR_IMAGE"

  deploy:
    needs:
      - build
    name: "Deploy with SAM (aws-workshop-george-makridakis)"
    uses: Orfium/orfium-github-actions/.github/workflows/deploy.yml@master
    with:
      #python_version: '3.10'
      environment_id:  review # ${{ needs.build.outputs.env-id }}
      environment_suffix: ${{ github.event.pull_request.number }} #${{ needs.build.outputs.env-suffix }}
      main_cf_template: infra/master.yml
      dynamic_cf_parameters: '{\"ImageUri\":\"${{ needs.build.outputs.ecr-image }}\"}'
